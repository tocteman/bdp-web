import React from "react"
import Link from "gatsby-link"
import Img from "gatsby-image"
import cabify from "../../img/fotos_reglas/cabify_blanco.jpg"
import escudoMexico from "../../img/fotos_reglas/escudo_mexico.jpg"

class SliderReglas extends React.Component {
  constructor(props ) {
    super(props)
    this.backgrounds = [cabify, escudoMexico]
    this.state = { backgroundIndex: 0 }

    this.changeBackground = this.changeBackground.bind(this)
  }

  componentDidMount() {
    this.timeout = setTimeout(
      this.changeBackground,
      this.props.animDuration * 3000
    )
  }

  componentWillUnmount() {
    if (this.timeout) clearTimeout(this.timeout)
  }

  changeBackground() {
    this.setState(function ({ backgroundIndex }) {
      const nextBackgroundIndex = ++backgroundIndex % this.backgrounds.length
      return { backgroundIndex: nextBackgroundIndex }
    }, function () {
      this.timeout = setTimeout(
        this.changeBackground,
        this.props.animDuration * 5000
      )
    })
  }

  render() {
    return (
      <div>
        ele
      <img src={this.backgrounds[this.state.backgroundIndex]} />
      </div>
    )
  }

}

export const queryExplicacion = graphql`
fragment ExplicacionReglasFragment on MarkdownRemark{
      frontmatter {
        explicacionRegla
        explicacionResolucion
        condicionTexto
        fotoRegla {
              childImageSharp {
                resolutions (
                  quality:90
                  width: 125
                  height: 125
                  cropFocus: ENTROPY
                ){
                  ...GatsbyImageSharpResolutions_noBase64
                }
              }
            }
            fotoResolucion {
            childImageSharp {
              resolutions (
                quality:90
                width: 125
                height: 125
                cropFocus: ENTROPY
              ){
                ...GatsbyImageSharpResolutions_noBase64
              }
            }
          }
      }
      
}
`

export default SliderReglas;



explicacionesDatos: allMarkdownRemark(filter:{fields:{slug:{regex:"/explicacion-regla_/"}}}){
      edges {
        node{
          ...ExplicacionReglasFragment
        }
      }
  }